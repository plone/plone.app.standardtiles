name: CI

on:
  push:
    # branches-ignore:
    #   - "master"
    #   - "releases/**"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        plone-version: [5.2]
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest]
        include:
          - plone-version: 5.1
            python-version: 2.7
            os: ubuntu-18.04
          - plone-version: 5.2
            python-version: 2.7
            os: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install libxml2-dev libxslt-dev
          pip install virtualenv wheel
      - uses: nanasess/setup-chromedriver@master
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/buildout-cache
            ~/extends
            ~/.cache/pip
          # key: ${{ runner.os }}-buildout-${{ hashFiles('**/*.cfg') }}-${{ matrix.plone-version }}-${{ matrix.python-version }}
          key: ${{ runner.os }}-buildout-${{ matrix.plone-version }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-buildout-
      - name: setup buildout cache
        run: |
            mkdir -p ~/buildout-cache/{eggs,downloads}
            mkdir ~/.buildout
            echo "[buildout]" > $HOME/.buildout/default.cfg
            echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
            echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
      - name: bootstrap buildout
        run: |
          ./bootstrap.sh -c test-${{ matrix.plone-version }}.x.cfg
          bin/pip install zest.pocompile
          bin/pocompile
      - name: buildout
        run: |
          bin/buildout -t 10 -Nc test-${{ matrix.plone-version }}.x.cfg
      - name: test
        run: |
            export DISPLAY=:99.0
            chromedriver --url-base=/wd/hub &
            sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
            sleep 3
            bin/test --all 
      - name: code-analysis
        run: echo "${{ matrix.plone-version }}" | grep 5.1 || bin/code-analysis  
      - name: Robot Ran
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./parts/test"
      - name: Artifact Robot Test Report
        if: failure() && steps.check_files.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v1
        with:
          name: test_results
          path: ./parts/test
      - uses: actions/setup-python@v2
        if: failure() && steps.check_files.outputs.files_exists == 'true'
        with:
          python-version: 2.7            
      - name: Robottest report
        if: failure() && steps.check_files.outputs.files_exists == 'true'
        run: |
            pip2.7 install popt || pip2.7 install --user  popt
            grep  --include=output.xml -Rl  FAIL parts/test | xargs --no-run-if-empty -n 1 popt
      - name: createcoverage
        run: |
            export DISPLAY=:99.0
            chromedriver --url-base=/wd/hub &
            sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
            sleep 3
            bin/createcoverage -t '--all'
            # bin/createcoverage
            bin/coverage json -i
      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true
          flag-name: ${{ matrix.plone-version }}-${{ matrix.python-version }}     
      # # TODO: replace travis irc notifications
      # - notifications:
      #     irc: irc.freenode.org#plone-testing
 

  coveralls_finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true


